var S=Object.defineProperty;var w=(r,t,e)=>t in r?S(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var n=(r,t,e)=>(w(r,typeof t!="symbol"?t+"":t,e),e);import{p as k,L as A,P as p}from"./vendor-bea44e1d.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function e(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerpolicy&&(o.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?o.credentials="include":i.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(i){if(i.ep)return;i.ep=!0;const o=e(i);fetch(i.href,o)}})();const u=10,y=200,m=50;class g extends k.GameObjects.Rectangle{constructor(e,s,i,o,a){super(e,s,i);n(this,"label");e.add.existing(this),this.setOrigin(0,0),this.label=e.add.text(s+u,i+u,o).setFontSize(18).setAlign("center");const l=this.label.width+u,h=this.label.height+u;this.width=l>=y?l:y,this.height=h>=m?h:m,this.setInteractive({useHandCursor:!0}).on("pointerover",()=>this.enterMenuButtonHoverState()).on("pointerout",()=>this.enterMenuButtonRestState()).on("pointerdown",()=>this.enterMenuButtonActiveState()).on("pointerup",()=>this.enterMenuButtonHoverState()),a&&this.on("pointerup",a),this.enterMenuButtonRestState()}enterMenuButtonHoverState(){this.label.setColor("#000000"),this.setFillStyle(8947848)}enterMenuButtonRestState(){this.label.setColor("#FFFFFF"),this.setFillStyle(8947848)}enterMenuButtonActiveState(){this.label.setColor("#BBBBBB"),this.setFillStyle(4473924)}}const C={active:!1,visible:!1,key:"MainMenu"};class F extends Phaser.Scene{constructor(){super(C)}create(){this.add.sprite(this.sys.canvas.width/2,this.sys.canvas.height/2,"sky").setDisplaySize(this.sys.canvas.width,this.sys.canvas.height),this.add.text(100,50,'Click the "Start" or press "Space" to begin!',{color:"#FFFFFF"}).setFontSize(24),new g(this,100,150,"Start Game",()=>{this.startGame()}),new g(this,100,250,"Settings",()=>console.log("settings button clicked")),new g(this,100,350,"Help",()=>console.log("help button clicked")),this.input.keyboard.once("keydown-SPACE",()=>{this.startGame()},this)}startGame(){this.scene.start("Game")}}const x=r=>r.game.scale.width,B=r=>r.game.scale.height,P={active:!1,visible:!1,key:"Boot"};class M extends Phaser.Scene{constructor(){super(P)}preload(){const t=x(this)*.5,e=B(this)*.5,s=100,i=400,o=this.add.rectangle(t,e,i,s,0),a=this.add.rectangle(t+20-o.width*.5,e,10,s-20,8947848),l=this.add.text(t-75,e-100,"Loading...").setFontSize(24),h=this.add.text(t-25,e,"0%").setFontSize(24),f=this.add.text(t-25,e+100,"").setFontSize(24);this.load.on("progress",d=>{a.width=(i-30)*d;const v=d*100;h.setText(`${v}%`)}),this.load.on("fileprogress",d=>{f.setText(d.key)}),this.load.on("complete",()=>{l.destroy(),h.destroy(),f.destroy(),a.destroy(),o.destroy(),this.scene.start("MainMenu")}),this.loadAssets()}loadAssets(){this.load.image("sky","https://labs.phaser.io/assets/skies/space3.png"),this.load.pack("asset-pack","../../assets/asset-pack.json")}}const c=new A;class T{constructor(t,e=3,s=!1){n(this,"id");n(this,"moveable");n(this,"_health");this.id=t,this._health=e,this.moveable=s}takeDamage(t=1){this.health-t>=0?(this._health-=t,c.debug(`${this.id} took ${t} damage, health is now ${this.health}`)):(this._health=0,c.debug(this.id+" out of health, ready for destruction"))}get health(){return this._health}}class b{constructor(t){n(this,"thing");n(this,"sprite");this.thing=new T(t)}setSprite(t){this.sprite=t}unsetSprite(){var t;(t=this.sprite)==null||t.destroy()}update(){if(this.sprite){if(this.thing.health<1){c.debug(`${this.thing.id} dead`),this.sprite.destroy();return}this.thing.health<2&&this.sprite.texture.key!=="bench-broken"&&(this.sprite.setTexture("bench-broken"),c.debug(`${this.thing.id} broken`))}}}class $ extends b{constructor(e){super(e);n(this,"focus");n(this,"speed",100);n(this,"direction","down")}setSprite(e){if(super.setSprite(e),this.sprite)this.sprite.setCollideWorldBounds(!0),this.sprite.setPushable(!1),this.sprite.setImmovable(!1),this.sprite.play("idle-down");else throw new Error("No sprite defined for actor")}getFocus(){return this.focus}update(){if(this.sprite)if(this.thing.health<1){c.debug(`${this.thing.id} dead`),this.sprite.destroy();return}else this.sprite.body.velocity.x===0&&this.sprite.body.velocity.y===0&&this.sprite.play(`idle-${this.direction}`,!0)}setFocus(e){this.focus=e}clearFocus(){this.focus=void 0}attack(){var e;this.focus?(this.focus.thing.takeDamage(1),(e=this.sprite)==null||e.play(`action-${this.direction}`)):c.debug("Nothing to attack")}move(e){if(this.sprite){const s=this.calcVelocity(e);this.sprite.setVelocity(s.x*this.speed,s.y*this.speed),this.sprite.play(`walk-${e}`,!0),this.direction=e,this.focus=void 0}}calcVelocity(e){const s=new Phaser.Math.Vector2(0,0);switch(e){case"up":s.y-=1;break;case"down":s.y+=1;break;case"left":s.x-=1;break;case"right":s.x+=1;break}return s.normalize()}stop(){this.sprite&&(this.sprite.setVelocity(0,0),this.sprite.play(`idle-${this.direction}`,!0))}setSpeed(e){this.speed=e}getSpeed(){return this.speed}setDirection(e){this.direction=e}getDirection(){return this.direction}}class L{static interact(t,e){switch(c.debug(`Action: ${t} |  Focus: ${(e==null?void 0:e.thing.id)||"no focus"}`),t){case"attack":e?e.thing.takeDamage(1):c.debug("Nothing to attack");break}}static performAction(t,e){switch(t){case"attack":e.attack();break;case"moveUp":e.move("up");break;case"moveDown":e.move("down");break;case"moveLeft":e.move("left");break;case"moveRight":e.move("right");break}}}const E={KeyW:"moveUp",KeyA:"moveLeft",KeyS:"moveDown",KeyD:"moveRight",Space:"attack",ArrowRight:"moveRight",ArrowLeft:"moveLeft",ArrowUp:"moveUp",ArrowDown:"moveDown"},D={controls:E};class G{constructor(t){n(this,"keyMap");n(this,"universe");this.keyMap=new Map(Object.entries(D.controls)),this.universe=t}loadKeyEvents(t){t.input.removeAllListeners(),c.debug("Loading key events"),t.input.keyboard.on("keydown",e=>{const s=this.getActionFromKeyCode(e.code);if(s){const i=this.universe.getControlledActor();i&&L.performAction(s,i)}else c.debug(`Unconfigured key pressed: ${e.code}`)})}getActionFromKeyCode(t){const e=this.keyMap.get(t);return e||(c.debug(`No action mapped to key: ${t}`),null)}}class I{constructor(t){n(this,"currentScene");n(this,"currentControlledActor");n(this,"actors",[]);n(this,"interactables",[]);n(this,"playerControl");this.currentScene=t,this.playerControl=new G(this),this.playerControl.loadKeyEvents(t)}setControlledActor(t){this.currentControlledActor=t}getControlledActor(){if(this.currentControlledActor)return this.currentControlledActor;throw new Error("No player actor")}setSceneCameraToPlayer(){if(this.currentControlledActor&&this.currentControlledActor.sprite)this.currentScene.cameras.main.startFollow(this.currentControlledActor.sprite,!0),this.currentScene.cameras.main.setFollowOffset(-this.currentControlledActor.sprite.width,-this.currentControlledActor.sprite.height);else throw new Error("No player actor for camera to follow")}setCurrentScene(t){this.currentScene=t,this.playerControl.loadKeyEvents(t)}getCurrentScene(){return this.currentScene}getActors(){return this.actors}getInteractables(){return this.interactables}deleteActor(t){this.actors=this.actors.filter(e=>e!==t)}deleteInteractable(t){this.interactables=this.interactables.filter(e=>e!==t)}addActor(t){this.actors.push(t)}addInteractable(t){this.interactables.push(t)}update(){this.actors.forEach(t=>t.update()),this.interactables.forEach(t=>t.update())}}const O={active:!1,visible:!1,key:"Game"};class H extends Phaser.Scene{constructor(){super(O);n(this,"universe")}create(){this.universe=new I(this),this.initTileset(),this.initPlayer(),this.initObjects(),c.debug("game scene created")}initObjects(){const e=new b("bench");e.setSprite(this.createSprite(200,200,"bench")),this.universe.addInteractable(e);const s=this.universe.getControlledActor();if(!s.sprite||!e.sprite)throw new Error("Collision object not defined");this.physics.add.collider(s.sprite,e.sprite,()=>this.handlePlayerInteractableCollision(e),void 0,this)}initPlayer(){const e=new $("player");e.setSprite(this.createSprite(100,200,"character",!0)),this.universe.addActor(e),this.universe.setControlledActor(e),this.universe.setSceneCameraToPlayer()}initTileset(){const e=this.make.tilemap({key:"basic-interior"});e.addTilesetImage("interior","interior");for(let s=0;s<e.layers.length;s++)e.createLayer(s,"interior",0,0)}handlePlayerInteractableCollision(e){this.universe.getControlledActor().setFocus(e)}createSprite(e,s,i,o=!1){const a=new Phaser.Physics.Arcade.Sprite(this,e,s,i);return this.add.existing(a),this.physics.add.existing(a),o?(a.setPushable(!0),a.setDrag(200,200)):(a.setPushable(!1),a.setImmovable(!0)),a}update(){this.universe.update()}}const K=[M,F,H];const N={title:"Survival Game",url:"https://github.com/Unnamed-GameDev-Studio/survival-game",version:"0.0.1",type:p.AUTO,scene:K,input:{keyboard:!0},scale:{mode:p.Scale.FIT,autoCenter:p.Scale.CENTER_BOTH,fullscreenTarget:"app",expandParent:!1},physics:{default:"arcade",arcade:{debug:!0}},parent:"game",backgroundColor:"#000000"},z=new p.Game(N);window.addEventListener("resize",()=>{z.scale.refresh()});
